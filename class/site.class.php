<?php class Site{                public static function getRelativeRoot(){                $return_path = "/..";                $root_path = str_replace("\\", "/", realpath($_SERVER['DOCUMENT_ROOT']));        $path_here = str_replace("\\", "/", dirname(__FILE__));        $root_abs = str_replace("\\", "/", realpath($path_here . $return_path));        $path = "/";        if (strpos($root_abs, $root_path) !== false)            $path = "/".substr($root_abs, strlen($root_path)) . "/";        $path = preg_replace("@/+@", "/", $path);        return $path;    }                public static function getPage(){        if(isset($_REQUEST['page']) && !empty($_REQUEST['page'])){            return $_REQUEST['page'];        }else{            return 'home';        }    }                public static function getPageInfos($url){                global $bdd;                $page = array();                $sql = "SELECT id_page AS id, ref_page AS ref, title, description FROM pages WHERE url = ".$bdd->quote($url)." LIMIT 1";        $q = $bdd->query($sql);        $r = $q->fetchObject();        if(!empty($r->id)) $page = $r;        else return Site::getPageInfos('404');                return $page;            }            public static function getSmartyFile($path){        $parts = explode("\\", $path);        if(count($parts)==1) $parts = explode("/", $path);        $currentFile = $parts[count($parts) - 1];        return str_replace(array('.tpl', '.php'), '', $currentFile).'.tpl';    }        function http_fetch_url($url, $timeout = 3){            $ch = curl_init($url);            curl_setopt($ch, CURLOPT_TIMEOUT, $timeout);            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);            curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);            $data = curl_exec($ch);            curl_close($ch);            return $data;    }            public static function getQuote($state=true){                global $bdd;if(!isset($_SESSION['user']['id'])) $state = false;        $sql = "SELECT quote_fr AS quote FROM quotes WHERE gender ".($state ? "IN('','".$USER_DATA->gender."')":"= ''")." ORDER BY RAND() LIMIT 1";        $q = $bdd->query($sql);        $r = $q->fetchObject();        if(!empty($r->quote)) return $r->quote;        else return 'Sois le changement que tu veux voir dans le monde.';            }        public static function checkAvailability($data){global $bdd;if('email'==$data['type'] && !filter_var($data['value'], FILTER_VALIDATE_EMAIL)) return false;if('user_shortener'==$data['type'] && strlen(create_url($data['value']))<5) return false;switch($data['type']){case 'email' : $sql = "SELECT id_user AS val FROM users WHERE email = ".$bdd->quote($data['value'])." LIMIT 1"; break;case 'user_shortener' : $sql = "SELECT id_user AS val FROM users WHERE shortener = ".$bdd->quote($data['value'])." LIMIT 1"; break;}$q = $bdd->query($sql);        $r = $q->fetchObject();        if(!empty($r->val)) return false;        else return true;}}?>